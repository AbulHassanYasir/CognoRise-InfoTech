import math
 
def print_board(board):
    for row in [board[i * 3:(i + 1) * 3] for i in range(3)]:
        print("| " + " | ".join(row) + " |")
def check_winner(board):
    # Define the winning combinations
    winning_combinations = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],  # Rows
        [0, 3, 6], [1, 4, 7], [2, 5, 8],  # Columns
        [0, 4, 8], [2, 4, 6]              # Diagonals
    ]
    for combo in winning_combinations:
        if board[combo[0]] == board[combo[1]] == board[combo[2]] != '':
            return board[combo[0]]
    return None
def minimax(board, depth, is_maximizing):
    winner = check_winner(board)
    if winner == 'X':
        return -10 + depth
    elif winner == 'O':
        return 10 - depth
    elif '' not in board:
        return 0
    if is_maximizing:
        best_score = -math.inf
        for i in range(9):
            if board[i] == '':
                board[i] = 'O'
                score = minimax(board, depth + 1, False)
                board[i] = ''
                best_score = max(score, best_score)
        return best_score
    else:
        best_score = math.inf
        for i in range(9):
            if board[i] == '':
                board[i] = 'X'
                score = minimax(board, depth + 1, True)
                board[i] = ''
                best_score = min(score, best_score)
        return best_score
def ai_move(board):
    best_score = -math.inf
    best_move = None
    for i in range(9):
        if board[i] == '':
            board[i] = 'O'
            score = minimax(board, 0, False)
            board[i] = ''
            if score > best_score:
                best_score = score
                best_move = i
    board[best_move] = 'O'
def human_move(board):
    move = -1
    while move not in range(9) or board[move] != '':
        try:
            move = int(input("Enter your move (0-8): "))
        except ValueError:
            continue
    board[move] = 'X'
def play_game():
    board = ['' for _ in range(9)]
    print("Welcome to Tic-Tac-Toe! You are X, and the AI is O.")
    print_board(board)
    while True:
        human_move(board)
        print_board(board)
        if check_winner(board) or '' not in board:
            break
        ai_move(board)
        print_board(board)
        if check_winner(board) or '' not in board:
            break
    winner = check_winner(board)
    if winner:
        print(f"{winner} wins!")
    else:
        print("It's a tie!")
if __name__ == "__main__":
    play_game()
